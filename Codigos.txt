-------------------------------------------------------
Código 1:

A = np.array([
        [1, 2, 3],
        [4, 5, 6]
    ])

print(A)

-------------------------------------------------------
Código 2:

img = np.array([
        [1, 0, 1, 0],
        [0, 1, 0, 1]
    ])

print(img)

-------------------------------------------------------
Código 3:

plt.imshow(img, cmap='gray')
plt.show()

-------------------------------------------------------
Código 4:

img1 = np.array([
        [ ],
        [ ],
        [ ],
        [ ],
        [ ]
    ])

print(img1)

-------------------------------------------------------
Código 5:

img2 = np.array([
        [1, 1  , 1  , 1  , 1],
        [1, 0.5, 1  , 0.5, 1],
        [1, 0.5, 0.5, 0.5, 1],
        [1, 1  , 0.5, 1  , 1],
        [1, 1  , 1  , 1  , 1]
    ])

print(img2)

plt.imshow(img2, cmap='gray')
plt.show()

-------------------------------------------------------
Código 6:

R = np.array([
        [0.0, 0.3, 0.9],
        [1.0, 0.0, 1.0],
    ])
G = np.array([
        [0.0, 0.3, 0.3],
        [0.0, 1.0, 1.0],
    ])
B = np.array([
        [0.0, 0.3, 0.9],
        [0.0, 0.0, 1.0],
    ])

img = np.stack([R, G, B], axis=2)

plt.imshow(img)
plt.show()

-------------------------------------------------------
Código 7:

mario = plt.imread('Mario.jpg')
print(mario.shape)
plt.imshow(mario)
plt.show()

-------------------------------------------------------
Código 8:

img = mario[:, ::-1, :]
print(img.shape)
plt.imshow(img)
plt.show()

-------------------------------------------------------
Código 9:

mario = plt.imread('Mario2.jpg')
print(mario.shape)
plt.imshow(mario)
plt.show()

-------------------------------------------------------
Código 10:

img = mario[::1, ::1, :]
print(img.shape)
plt.imshow(img)
plt.show()

-------------------------------------------------------
Código 11:

bowser = plt.imread('Bowser.jpg')
print(bowser.shape)
plt.imshow(bowser)
plt.show()

-------------------------------------------------------
Código 12:

filtro = np.array([
        [-2, -1, 0],
        [-1, 1, 1],
        [0, 1, 2]
    ])

img = cv2.filter2D(bowser, kernel=filtro, ddepth=-1)

plt.imshow(img)
plt.show()

-------------------------------------------------------
Código 13:

model = YOLO('yolov8n.pt')
results = model(img)

# Muestro la imagen con la detección
plt.imshow(results[0].plot())
plt.show()

